<!-- templates/customers/account.liquid -->

<div class="customer-account">
  <div class="page-width">
    
    <!-- Account Header -->
    <div class="account-header">
      <div class="account-welcome">
        <h1 class="account-title">My Account</h1>
        <p class="account-greeting">Welcome back, {{ customer.first_name }}!</p>
      </div>
      <div class="account-actions">
        <a href="{{ routes.account_logout_url }}" class="btn btn-secondary">Sign Out</a>
      </div>
    </div>

    <!-- Account Navigation Tabs -->
    <div class="account-navigation">
      <nav class="account-tabs">
        <button class="tab-button active" data-tab="overview">Overview</button>
        <button class="tab-button" data-tab="orders">Order History</button>
        <button class="tab-button" data-tab="addresses">Addresses</button>
        <button class="tab-button" data-tab="profile">Profile</button>
        <button class="tab-button" data-tab="wishlist">Wishlist</button>
      </nav>
    </div>

    <!-- Tab Content Container -->
    <div class="account-content">
      
      <!-- Overview Tab -->
      <div class="tab-content active" id="overview-tab">
        <div class="account-overview">
          
          <!-- Account Stats -->
          <div class="account-stats">
            <div class="stat-card">
              <h3>Total Orders</h3>
              <p class="stat-number">{{ customer.orders_count }}</p>
            </div>
            <div class="stat-card">
              <h3>Total Spent</h3>
              <p class="stat-number">{{ customer.total_spent | money }}</p>
            </div>
            <div class="stat-card">
              <h3>Member Since</h3>
              <p class="stat-number">{{ customer.created_at | date: "%B %Y" }}</p>
            </div>
          </div>

          <!-- Quick Actions -->
          <div class="quick-actions">
            <h2>Quick Actions</h2>
            <div class="action-grid">
              <a href="#" class="action-card" data-tab-trigger="orders">
                <div class="action-icon">📦</div>
                <h3>View Orders</h3>
                <p>Track your recent purchases</p>
              </a>
              <a href="#" class="action-card" data-tab-trigger="addresses">
                <div class="action-icon">📍</div>
                <h3>Manage Addresses</h3>
                <p>Update shipping & billing info</p>
              </a>
              <a href="#" class="action-card" data-tab-trigger="profile">
                <div class="action-icon">👤</div>
                <h3>Edit Profile</h3>
                <p>Update personal information</p>
              </a>
              <a href="#" class="action-card" data-tab-trigger="wishlist">
                <div class="action-icon">❤️</div>
                <h3>My Wishlist</h3>
                <p>View saved items</p>
              </a>
            </div>
          </div>

          <!-- Recent Orders -->
          <div class="recent-orders">
            <h2>Recent Orders</h2>
            {% if customer.orders.size > 0 %}
              {% for order in customer.orders limit: 3 %}
                <div class="order-summary">
                  <div class="order-info">
                    <h4><a href="{{ order.customer_url }}">Order #{{ order.name }}</a></h4>
                    <p class="order-date">{{ order.created_at | date: "%B %d, %Y" }}</p>
                  </div>
                  <div class="order-status">
                    <span class="status-badge status-{{ order.fulfillment_status }}">
                      {{ order.fulfillment_status | default: 'pending' | capitalize }}
                    </span>
                  </div>
                  <div class="order-total">
                    <strong>{{ order.total_price | money }}</strong>
                  </div>
                </div>
              {% endfor %}
            {% else %}
              <div class="empty-state">
                <p>You haven't placed any orders yet.</p>
                <a href="{{ routes.all_products_collection_url }}" class="btn btn-primary">Start Shopping</a>
              </div>
            {% endif %}
          </div>
        </div>
      </div>

      <!-- Orders Tab -->
      <div class="tab-content" id="orders-tab">
        <div class="orders-section">
          <h2>Order History</h2>
          
          {% if customer.orders.size > 0 %}
            <div class="orders-list">
              {% paginate customer.orders by 10 %}
                {% for order in customer.orders %}
                  <div class="order-item">
                    <div class="order-header">
                      <div class="order-number">
                        <h3><a href="{{ order.customer_url }}">Order #{{ order.name }}</a></h3>
                        <p class="order-date">{{ order.created_at | date: "%B %d, %Y at %I:%M %p" }}</p>
                      </div>
                      <div class="order-status-info">
                        <span class="status-badge status-{{ order.fulfillment_status }}">
                          {{ order.fulfillment_status | default: 'pending' | capitalize }}
                        </span>
                        <span class="payment-status payment-{{ order.financial_status }}">
                          {{ order.financial_status | capitalize }}
                        </span>
                      </div>
                      <div class="order-total">
                        <strong>{{ order.total_price | money }}</strong>
                      </div>
                    </div>
                    
                    <div class="order-items">
                      {% for line_item in order.line_items limit: 3 %}
                        <div class="order-item-detail">
                          {% if line_item.image %}
                            <img src="{{ line_item.image | img_url: '60x60' }}" alt="{{ line_item.title }}" class="item-image">
                          {% endif %}
                          <div class="item-info">
                            <p class="item-title">{{ line_item.title }}</p>
                            {% if line_item.variant.title != 'Default Title' %}
                              <p class="item-variant">{{ line_item.variant.title }}</p>
                            {% endif %}
                            <p class="item-quantity">Qty: {{ line_item.quantity }}</p>
                          </div>
                          <div class="item-price">
                            {{ line_item.final_price | money }}
                          </div>
                        </div>
                      {% endfor %}
                      
                      {% if order.line_items.size > 3 %}
                        <p class="more-items">+ {{ order.line_items.size | minus: 3 }} more items</p>
                      {% endif %}
                    </div>

                    <div class="order-actions">
                      <a href="{{ order.customer_url }}" class="btn btn-outline">View Details</a>
                      {% if order.fulfillment_status == 'fulfilled' %}
                        <button class="btn btn-outline reorder-btn" data-order-id="{{ order.id }}">Reorder</button>
                      {% endif %}
                    </div>
                  </div>
                {% endfor %}
                
                {% if paginate.pages > 1 %}
                  <nav class="pagination">
                    {{ paginate | default_pagination }}
                  </nav>
                {% endif %}
              {% endpaginate %}
            </div>
          {% else %}
            <div class="empty-state">
              <div class="empty-icon">📦</div>
              <h3>No orders yet</h3>
              <p>When you place your first order, it will appear here.</p>
              <a href="{{ routes.all_products_collection_url }}" class="btn btn-primary">Start Shopping</a>
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Addresses Tab -->
      <div class="tab-content" id="addresses-tab">
        <div class="addresses-section">
          <div class="section-header">
            <h2>My Addresses</h2>
            <a href="{{ routes.account_addresses_url }}" class="btn btn-primary">Add New Address</a>
          </div>

          <div class="addresses-grid">
            {% if customer.default_address %}
              <div class="address-card default-address">
                <div class="address-header">
                  <h3>Default Address</h3>
                  <span class="default-badge">Default</span>
                </div>
                <div class="address-content">
                  <p><strong>{{ customer.default_address.name }}</strong></p>
                  {% if customer.default_address.company != blank %}
                    <p>{{ customer.default_address.company }}</p>
                  {% endif %}
                  <p>{{ customer.default_address.address1 }}</p>
                  {% if customer.default_address.address2 != blank %}
                    <p>{{ customer.default_address.address2 }}</p>
                  {% endif %}
                  <p>{{ customer.default_address.city }}, {{ customer.default_address.province }} {{ customer.default_address.zip }}</p>
                  <p>{{ customer.default_address.country }}</p>
                  {% if customer.default_address.phone != blank %}
                    <p>{{ customer.default_address.phone }}</p>
                  {% endif %}
                </div>
                <div class="address-actions">
                  <button class="btn btn-outline btn-small edit-address-btn" data-address-id="{{ customer.default_address.id }}">Edit</button>
                </div>
              </div>
            {% endif %}

            {% for address in customer.addresses %}
              {% unless address.id == customer.default_address.id %}
                <div class="address-card">
                  <div class="address-content">
                    <p><strong>{{ address.name }}</strong></p>
                    {% if address.company != blank %}
                      <p>{{ address.company }}</p>
                    {% endif %}
                    <p>{{ address.address1 }}</p>
                    {% if address.address2 != blank %}
                      <p>{{ address.address2 }}</p>
                    {% endif %}
                    <p>{{ address.city }}, {{ address.province }} {{ address.zip }}</p>
                    <p>{{ address.country }}</p>
                    {% if address.phone != blank %}
                      <p>{{ address.phone }}</p>
                    {% endif %}
                  </div>
                  <div class="address-actions">
                    <button class="btn btn-outline btn-small edit-address-btn" data-address-id="{{ address.id }}">Edit</button>
                    <form action="{{ routes.account_addresses_url }}/{{ address.id }}" method="post" style="display: inline;">
                      <input type="hidden" name="_method" value="delete">
                      <button type="submit" class="btn btn-outline btn-small btn-danger" onclick="return confirm('Are you sure you want to delete this address?')">Delete</button>
                    </form>
                  </div>
                </div>
              {% endunless %}
            {% endfor %}
          </div>

          <!-- Edit Address Modal -->
          <div id="address-modal" class="modal">
            <div class="modal-content">
              <div class="modal-header">
                <h3 id="modal-title">Edit Address</h3>
                <span class="close">&times;</span>
              </div>
              <form id="address-form" class="address-edit-form">
                <div class="form-grid">
                  <div class="form-group">
                    <label for="address_first_name">First Name *</label>
                    <input type="text" id="address_first_name" name="address[first_name]" required>
                  </div>
                  <div class="form-group">
                    <label for="address_last_name">Last Name *</label>
                    <input type="text" id="address_last_name" name="address[last_name]" required>
                  </div>
                  <div class="form-group full-width">
                    <label for="address_company">Company</label>
                    <input type="text" id="address_company" name="address[company]">
                  </div>
                  <div class="form-group full-width">
                    <label for="address_address1">Address *</label>
                    <input type="text" id="address_address1" name="address[address1]" required>
                  </div>
                  <div class="form-group full-width">
                    <label for="address_address2">Apartment, suite, etc.</label>
                    <input type="text" id="address_address2" name="address[address2]">
                  </div>
                  <div class="form-group">
                    <label for="address_city">City *</label>
                    <input type="text" id="address_city" name="address[city]" required>
                  </div>
                  <div class="form-group">
                    <label for="address_province">State/Province</label>
                    <input type="text" id="address_province" name="address[province]">
                  </div>
                  <div class="form-group">
                    <label for="address_zip">Postal/Zip Code *</label>
                    <input type="text" id="address_zip" name="address[zip]" required>
                  </div>
                  <div class="form-group">
                    <label for="address_country">Country *</label>
                    <select id="address_country" name="address[country]" required>
                      <option value="">Select Country</option>
                      <option value="United States">United States</option>
                      <option value="Canada">Canada</option>
                      <option value="United Kingdom">United Kingdom</option>
                      <option value="Australia">Australia</option>
                      <!-- Add more countries as needed -->
                    </select>
                  </div>
                  <div class="form-group full-width">
                    <label for="address_phone">Phone</label>
                    <input type="tel" id="address_phone" name="address[phone]">
                  </div>
                  <div class="form-group full-width">
                    <label class="checkbox-label">
                      <input type="checkbox" id="address_default" name="address[default]">
                      Set as default address
                    </label>
                  </div>
                </div>
                <div class="form-actions">
                  <button type="submit" class="btn btn-primary">Save Address</button>
                  <button type="button" class="btn btn-secondary cancel-btn">Cancel</button>
                </div>
              </form>
            </div>
          </div>

          {% if customer.addresses.size == 0 %}
            <div class="empty-state">
              <div class="empty-icon">📍</div>
              <h3>No saved addresses</h3>
              <p>Add an address to make checkout faster.</p>
              <a href="{{ routes.account_addresses_url }}" class="btn btn-primary">Add Address</a>
            </div>
          {% endif %}
        </div>
      </div>

      <!-- Profile Tab -->
      <div class="tab-content" id="profile-tab">
        <div class="profile-section">
          <h2>Profile Information</h2>
          
          <form action="{{ routes.account_url }}" method="post" class="customer-form">
            <div class="form-grid">
              <div class="form-group">
                <label for="first_name">First Name</label>
                <input type="text" id="first_name" name="customer[first_name]" value="{{ customer.first_name }}" required>
              </div>
              
              <div class="form-group">
                <label for="last_name">Last Name</label>
                <input type="text" id="last_name" name="customer[last_name]" value="{{ customer.last_name }}" required>
              </div>
              
              <div class="form-group full-width">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="customer[email]" value="{{ customer.email }}" required>
              </div>
              
              <div class="form-group full-width">
                <label for="phone">Phone Number</label>
                <input type="tel" id="phone" name="customer[phone]" value="{{ customer.phone }}">
              </div>
            </div>
            
            <div class="form-actions">
              <button type="submit" class="btn btn-primary">Update Profile</button>
            </div>
          </form>

          <!-- Password Change Section -->
          <div class="password-section">
            <h3>Change Password</h3>
            <form action="{{ routes.account_url }}" method="post" class="password-form">
              <div class="form-group">
                <label for="old_password">Current Password</label>
                <input type="password" id="old_password" name="customer[password]" required>
              </div>
              
              <div class="form-group">
                <label for="new_password">New Password</label>
                <input type="password" id="new_password" name="customer[new_password]" required>
              </div>
              
              <div class="form-group">
                <label for="new_password_confirmation">Confirm New Password</label>
                <input type="password" id="new_password_confirmation" name="customer[new_password_confirmation]" required>
              </div>
              
              <div class="form-actions">
                <button type="submit" class="btn btn-secondary">Change Password</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      <!-- Wishlist Tab -->
      <div class="tab-content" id="wishlist-tab">
        <div class="wishlist-section">
          <h2>My Wishlist</h2>
          
          {% comment %} 
          Note: Shopify doesn't have built-in wishlist functionality.
          This would require a custom app or metafields implementation.
          Here's a placeholder structure:
          {% endcomment %}
          
          <div class="wishlist-grid">
            {% comment %} Replace with actual wishlist implementation {% endcomment %}
            <div class="empty-state">
              <div class="empty-icon">❤️</div>
              <h3>Your wishlist is empty</h3>
              <p>Save items you love for later by clicking the heart icon on product pages.</p>
              <a href="{{ routes.all_products_collection_url }}" class="btn btn-primary">Continue Shopping</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript for Tab Functionality -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const tabButtons = document.querySelectorAll('.tab-button');
  const tabContents = document.querySelectorAll('.tab-content');
  const actionCards = document.querySelectorAll('[data-tab-trigger]');

  function switchTab(tabName) {
    // Remove active class from all tabs and contents
    tabButtons.forEach(btn => btn.classList.remove('active'));
    tabContents.forEach(content => content.classList.remove('active'));
    
    // Add active class to selected tab and content
    const activeButton = document.querySelector(`[data-tab="${tabName}"]`);
    const activeContent = document.getElementById(`${tabName}-tab`);
    
    if (activeButton && activeContent) {
      activeButton.classList.add('active');
      activeContent.classList.add('active');
    }
  }

  // Tab button click handlers
  tabButtons.forEach(button => {
    button.addEventListener('click', () => {
      const tabName = button.getAttribute('data-tab');
      switchTab(tabName);
    });
  });

  // Action card click handlers
  actionCards.forEach(card => {
    card.addEventListener('click', (e) => {
      e.preventDefault();
      const tabName = card.getAttribute('data-tab-trigger');
      switchTab(tabName);
    });
  });

  // Reorder functionality placeholder
  document.querySelectorAll('.reorder-btn').forEach(btn => {
    btn.addEventListener('click', function() {
      const orderId = this.getAttribute('data-order-id');
      // Implement reorder functionality
      console.log('Reorder clicked for order:', orderId);
    });
  });

  // Address editing functionality
  const modal = document.getElementById('address-modal');
  const editButtons = document.querySelectorAll('.edit-address-btn');
  const closeBtn = document.querySelector('.modal .close');
  const cancelBtn = document.querySelector('.cancel-btn');
  const addressForm = document.getElementById('address-form');

  // Open modal for editing
  editButtons.forEach(btn => {
    btn.addEventListener('click', function() {
      const addressId = this.getAttribute('data-address-id');
      
      // In a real implementation, you would fetch the address data
      // For now, we'll clear the form
      addressForm.reset();
      addressForm.setAttribute('data-address-id', addressId);
      
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    });
  });

  // Close modal
  function closeModal() {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
  }

  closeBtn.addEventListener('click', closeModal);
  cancelBtn.addEventListener('click', closeModal);

  // Close modal when clicking outside
  window.addEventListener('click', function(event) {
    if (event.target === modal) {
      closeModal();
    }
  });

  // Handle form submission
  addressForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const addressId = this.getAttribute('data-address-id');
    const formData = new FormData(this);
    
    // Convert FormData to regular object
    const addressData = {};
    for (let [key, value] of formData.entries()) {
      addressData[key] = value;
    }
    
    // In a real implementation, you would send this data to Shopify
    console.log('Saving address:', addressData);
    
    // Show success message and close modal
    alert('Address updated successfully!');
    closeModal();
    
    // Reload the page to show updated address
    window.location.reload();
  });

  // Add new address button
  const addAddressBtn = document.querySelector('.addresses-section .btn-primary');
  if (addAddressBtn) {
    addAddressBtn.addEventListener('click', function(e) {
      e.preventDefault();
      
      // Clear form for new address
      addressForm.reset();
      addressForm.removeAttribute('data-address-id');
      document.getElementById('modal-title').textContent = 'Add New Address';
      
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
    });
  }
});
</script>

<style>
/* Account Page Styles */
.customer-account {
  padding: 2rem 0;
}

.account-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #e0e0e0;
}

.account-title {
  font-size: 2rem;
  margin: 0 0 0.5rem 0;
}

.account-greeting {
  color: #666;
  margin: 0;
}

/* Navigation Tabs */
.account-navigation {
  margin-bottom: 2rem;
}

.account-tabs {
  display: flex;
  border-bottom: 1px solid #e0e0e0;
  gap: 0;
}

.tab-button {
  padding: 1rem 1.5rem;
  border: none;
  background: none;
  cursor: pointer;
  border-bottom: 2px solid transparent;
  transition: all 0.3s ease;
  font-weight: 500;
  color: #007bff; /* Make tab buttons blue by default */
}

.tab-button:hover,
.tab-button.active {
  color: #007bff;
  border-bottom-color: #007bff;
}

/* Tab Content */
.tab-content {
  display: none;
}

.tab-content.active {
  display: block;
}

/* Account Stats */
.account-stats {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-bottom: 2rem;
}

.stat-card {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 8px;
  text-align: center;
}

.stat-card h3 {
  margin: 0 0 0.5rem 0;
  color: #666;
  font-size: 0.9rem;
  font-weight: 500;
}

.stat-number {
  font-size: 1.5rem;
  font-weight: bold;
  margin: 0;
  color: #333;
}

/* Quick Actions */
.quick-actions {
  margin-bottom: 2rem;
}

.action-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
}

.action-card {
  display: block;
  padding: 1.5rem;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  text-decoration: none;
  color: inherit;
  transition: all 0.3s ease;
}

.action-card:hover {
  border-color: #007bff;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0,123,255,0.15);
}

.action-icon {
  font-size: 2rem;
  margin-bottom: 0.5rem;
}

.action-card h3 {
  margin: 0 0 0.5rem 0;
  font-size: 1.1rem;
}

.action-card p {
  margin: 0;
  color: #666;
  font-size: 0.9rem;
}

/* Orders */
.orders-list {
  space-y: 1rem;
}

.order-item {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1.5rem;
  margin-bottom: 1rem;
}

.order-header {
  display: grid;
  grid-template-columns: 1fr auto auto;
  gap: 1rem;
  align-items: center;
  margin-bottom: 1rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid #f0f0f0;
}

.order-number h3 {
  margin: 0 0 0.25rem 0;
}

.order-number a {
  color: #007bff;
  text-decoration: none;
}

.order-date {
  margin: 0;
  color: #666;
  font-size: 0.9rem;
}

.status-badge {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-pending {
  background: #fff3cd;
  color: #856404;
}

.status-fulfilled {
  background: #d4edda;
  color: #155724;
}

.status-partial {
  background: #d1ecf1;
  color: #0c5460;
}

.order-items {
  margin-bottom: 1rem;
}

.order-item-detail {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem 0;
}

.item-image {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: 4px;
}

.item-info {
  flex: 1;
}

.item-title {
  margin: 0 0 0.25rem 0;
  font-weight: 500;
}

.item-variant,
.item-quantity {
  margin: 0;
  color: #666;
  font-size: 0.9rem;
}

.item-price {
  font-weight: 500;
}

/* Addresses */
.addresses-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
}

.address-card {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1.5rem;
}

.default-address {
  border-color: #007bff;
  background: #f8f9ff;
}

.address-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.default-badge {
  background: #007bff;
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.8rem;
}

.address-content p {
  margin: 0 0 0.25rem 0;
}

.address-actions {
  margin-top: 1rem;
  display: flex;
  gap: 0.5rem;
}

/* Forms */
.customer-form,
.password-form {
  background: #f8f9fa;
  padding: 1.5rem;
  border-radius: 8px;
  margin-bottom: 2rem;
}

.form-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.form-group {
  display: flex;
  flex-direction: column;
}

.form-group.full-width {
  grid-column: 1 / -1;
}

.form-group label {
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-group input {
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.form-group input:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
}

.form-actions {
  margin-top: 1rem;
}

/* Empty States */
.empty-state {
  text-align: center;
  padding: 3rem 1rem;
}

.empty-icon {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.empty-state h3 {
  margin: 0 0 0.5rem 0;
  color: #333;
}

.empty-state p {
  color: #666;
  margin: 0 0 1.5rem 0;
}

/* Buttons */
.btn {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 4px;
  text-decoration: none;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  text-align: center;
  color: #000; /* Make all button text black by default */
}

.btn-primary {
  background: #007bff;
  color: #000; /* Black text on primary buttons */
}

.btn-primary:hover {
  background: #0056b3;
  color: #000; /* Keep black text on hover */
}

.btn-secondary {
  background: #6c757d;
  color: #000; /* Black text on secondary buttons */
}

.btn-secondary:hover {
  background: #545b62;
  color: #000; /* Keep black text on hover */
}

.btn-outline {
  background: transparent;
  border: 1px solid #007bff;
  color: #000; /* Black text on outline buttons */
}

.btn-outline:hover {
  background: #007bff;
  color: #000; /* Keep black text on hover */
}

.btn-small {
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
}

.btn-danger {
  border-color: #dc3545;
  color: #000; /* Black text on danger buttons */
}

.btn-danger:hover {
  background: #dc3545;
  color: #000; /* Keep black text on hover */
}

/* Modal Styles */
.modal {
  display: none;
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.5);
}

.modal-content {
  background-color: white;
  margin: 2% auto;
  padding: 0;
  border-radius: 8px;
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  border-bottom: 1px solid #e0e0e0;
}

.modal-header h3 {
  margin: 0;
}

.close {
  font-size: 1.5rem;
  font-weight: bold;
  cursor: pointer;
  color: #999;
}

.close:hover {
  color: #000;
}

.address-edit-form {
  padding: 1.5rem;
}

.checkbox-label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.checkbox-label input[type="checkbox"] {
  margin: 0;
}

/* Form Select Styles */
select {
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
  background: white;
}

select:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
}

/* Responsive */
@media (max-width: 768px) {
  .account-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .account-tabs {
    flex-wrap: wrap;
  }
  
  .tab-button {
    flex: 1;
    min-width: 120px;
  }
  
  .order-header {
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }
  
  .form-grid {
    grid-template-columns: 1fr;
  }
  
  .addresses-grid {
    grid-template-columns: 1fr;
  }
}
</style>